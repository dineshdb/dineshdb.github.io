---
import "../styles/fonts.css";
import "../styles/global.css";
import { ViewTransitions } from "astro:transitions";

export interface Props {
  title: string;
  description: string;
  permalink: string;
  image?: string;
}

const baseUrl = Astro.site?.href ?? "";
const { title, description, image } = Astro.props;
const permalink = baseUrl + Astro.props.permalink;
const socialUrl = image ?? baseUrl + "/assets/social.png";
---

<meta charset="utf-8" />
<meta name="viewport" content="width=device-width" />
<link rel="icon" type="image/x-icon" href="/favicon.ico" />
<ViewTransitions />

<!-- Primary Meta Tags -->
<title>{title}</title>
<meta name="title" content={title} />
<meta name="description" content={description} />

<!-- Open Graph / Facebook -->
<meta property="og:type" content="website" />
<meta property="og:url" content={permalink} />
<meta property="og:title" content={title} />
<meta property="og:description" content={description} />
<meta property="og:image" content={socialUrl} />

<!-- Twitter -->
<meta property="twitter:card" content="summary_large_image" />
<meta property="twitter:url" content={permalink} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:image" content={socialUrl} />

<!-- This is intentionally inlined to avoid FOUC -->
<script>
  const root = document.documentElement;
  const updateTheme = (darkmode: boolean) =>
    darkmode
      ? root.classList.add("theme-dark")
      : root.classList.remove("theme-dark");

  const darkModePreference = window.matchMedia("(prefers-color-scheme: dark)");

  // update theme if user had set a config on localStorage
  const theme = localStorage.getItem("theme");
  updateTheme(theme === "dark" || (!theme && darkModePreference.matches));

  // user has no preference, let's update with system
  if (!theme) {
    darkModePreference.addEventListener("change", (darkModePreference) =>
      updateTheme(darkModePreference.matches)
    );
  }
</script>
